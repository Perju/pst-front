* Perju Stream Toolbox
Es un conjunto de herramientas para facilitar y hacer mas dinámicas las
emisiones en directo (streaming), empezando por un controlador para =OBS= y mas
adelante se añadirán otras funcionalidades.

** Se añade /tauri/ para publicar como aplicación de escritorio
/TODO revisar si es necesario con la githubaction/
para evitar el error del strip al compilar, se puede deshabilitar la opción
strip con ~NO_STRIP=true %comando%~

** Entornos de angular
Se ha creado la configuración de entornos para Angular y aparte de los dos
entornos básicos =Desarrollo= y =Produccion= se han añadido otros dos entornos mas.

- Desktop :: Entorno para compilar la aplicación de escritorio y que utilice el
  back creado en Rust.
- Obsweb :: Entorno creado para exportar solo el modulo del controlador de obs
  como una aplicación web.

* Documentación de desarrollo :dev:
** Gestión de ramas
- master :: la principal.
- release :: para publicar versiones.
- develop :: para ir probando los nuevos desarrollos.
** Como subir de versión
- Actualizar el número de versión en los archivos
  - ~./src-tauri/tauri.conf.json~
  - ~./src-tauri/Cargo.toml~
  - ~./package.json~
- Fusionar "=master=" en =release=

* Manual de usuario
** Instalación
- Te descargas el instalador o el portable y antes de ejecutarlo rellenas el
  archivo .env con los siguientes valores.
  #+begin_src sh
TKN_CLIENT_ID=token_asd913ijf
TKN_CLIENT_SECRET=token_afs0d9fko2
TKN_BOT=token_alskdjf982j
  #+end_src
  - Para conseguir los dos primeros tienes que crear una aplicación en la
    [[https://dev.twitch.tv/console][consola]] de desarrollador de Twitch.
  - Para el bot que habla en el chat hay que conseguir un token oauth como los
    de [[https://twitchapps.com/tmi/][este]] generador de tokens y utilizarlo sin el prefijo "oauth:".
    - este funciona [[https://twitchaddon.page.link/1Sk5][enlace]]
** Uso
*** OBS
*** Twitch
